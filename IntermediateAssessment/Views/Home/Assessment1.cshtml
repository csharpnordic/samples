@model IntermediateAssessment.Storage.Exercise

@{
    ViewBag.Title = Model.Assessment.Name;
}

<h1>@Model.Assessment.Name</h1>

<h2>Студент</h2>
<table class="table-bordered col-md-6">
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.Student.FirstName)</td>
        <td class="col-4">@Html.DisplayFor(model => model.Student.FirstName)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.Student.LastName)</td>
        <td class="col-2">@Html.DisplayFor(model => model.Student.LastName)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.Student.GroupHtml)</td>
        <td class="col-4">@Html.Raw(Model.Student.GroupHtml)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.Student.FileNumber)</td>
        <td class="col-4">@Html.DisplayFor(model => model.Student.FileNumber)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">@Html.DisplayNameFor(model => model.StartTime)</td>
        <td class="col-4">@Html.DisplayFor(model => model.StartTime)</td>
    </tr>
    <tr>
        <td class="bg-light col-2">Время окончания приёма задания</td>
        <td class="col-4">@ViewBag.FinishTime</td>
    </tr></table>

<h2>Задание № 1</h2>
<p>Вы успешно окончили МГТУ им. Н. Э. Баумана. Вы начинаете работать в небольшой компании – производителе ПО. Управление проектами в компании осуществляется по методологии Microsoft Solution Framework. Необходимо укомплектовать проектную команду. В настоящее время в компании доступны для включения в проект следующие сотрудники:</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Exercises1.First().Character.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Exercises1.First().Character.Number)
        </th>
        <th>
            Компетенция 1
        </th>
        <th>
            Компетенция 2
        </th>
    </tr>

    @foreach (var item in Model.Exercises1.OrderBy(x => x.Character.Number))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Character.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Character.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ability1.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ability2.Name)
            </td>
        </tr>
    }
</table>

@using (Html.BeginForm("Assessment1", "Home", FormMethod.Post))
{    
    @Html.Hidden("id", Model.ID)
    @Html.Hidden("answer", null)

    <p>Необходимо распределить их по проектным ролям в соответствии с их компетенциями. Все роли должны быть заполнены. Заполните таблицу, проставляя табельный номер сотрудника у выбранной для него роли</p>
    <table class="table">
        <tr>
            <th>
                Роль
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exercises1.First().Character.Number)
            </th>
        </tr>
        @foreach (var item in Model.Exercises1.OrderBy(x => x.Role.Number))
        {
            <tr>
                <td>
                    @item.Role.Name
                </td>
                <td>
                    <input class="input-validation-error" id="answer" name="answer" type="text" value="@item.AnswerNumber" />
                    <div class="text-danger">@item.AnswerNumberMessage</div>
                </td>
            </tr>
        }
    </table>
    <h2>Задание № 2</h2>
    <p>
        Ниже приведен код, который описывает структуру данных для хранения словаря.
        Конструктор словаря содержит инициализацию словаря единственным словом (для примера).
        Код самой сериализации для простоты опущен.
    </p>
    <hr />
    foreach (var item in Model.Exercises2.OrderBy(x => x.CodeRow.Row))
    {
        <p class="text-monospace">@Html.Raw(item.ToString())</p>
    }
    <p>Приведите XML-документ, который будет сформирован при сериализации данного словаря из одного слова</p>
    <textarea class="input-validation-error col-md-12" rows="10" id="xml" name="xml" type="text">
    @Model.Answer
    </textarea>

    <input type="submit" value="Отправить результат на проверку" class="btn btn-info col-md-12" />
}