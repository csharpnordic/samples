<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".sql" #>
--
-- Создание функции для заполнения поля Modified 
--
CREATE OR REPLACE FUNCTION public.func_update_modified()
RETURNS trigger
LANGUAGE plpgsql
AS $BODY$
BEGIN
  new."Modified" := LOCALTIMESTAMP;
  RETURN NEW;
END;
$BODY$
;
--
-- Создание триггеров для заполнения поля Modified 
-- 
<#
    var lines = System.IO.File.ReadAllLines(@".\Cenguru\CenguruCommon\Storage\DB.cs");
    string pattern = @"^public virtual DbSet<(?<schema>[(?<table>[A-Za-z]+)>\s+(?<prop>[A-Za-z]+)";
    foreach (string line in lines)
    {
        var match = System.Text.RegularExpressions.Regex.Match(line.Trim(), pattern, System.Text.RegularExpressions.RegexOptions.Singleline);
        if (!match.Success) continue;    
        bool skip = false;  
        string schema = "gts";
        if (skip) continue;
        var name = match.Groups["prop"].Value;
        var table = $"{schema}.\"{name}\"";
        var trigger = $"{name}_UpdateTrigger".ToLower();       
#>
-- <#= table #>
CREATE OR REPLACE TRIGGER <#= schema #>__<#= trigger #> 
 BEFORE INSERT ON <#= table #>
 FOR EACH ROW EXECUTE PROCEDURE public.func_update_modified();

ALTER TABLE <#= table #> ENABLE TRIGGER <#= schema #>__<#= trigger #>;

<# } #>